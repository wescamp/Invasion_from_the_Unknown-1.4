#textdomain wesnoth-Invasion_from_the_Unknown

#define MAP _NAME
    {EX_ATTRIBUTE map_data ("{@campaigns/Invasion_from_the_Unknown/maps/{_NAME}}")}
#enddef

#define MASK _NAME
    {EX_ATTRIBUTE mask ("{@campaigns/Invasion_from_the_Unknown/masks/{_NAME}}")}
#enddef

# wmllint: validate-on

#define NO_RECALLS
    disallow_recall=yes
#enddef

#define NO_MAP
border_size=1
usage=map

map_data="
Xv          , Xv          , Xv          
Xv          , 1 Xv        , Xv          
Xv          , Xv          , Xv          
"
#enddef

# wmlindent: start ignoring
#define BEGIN_VARIABLES
    [+variables]
#enddef
#define END_VARIABLES
    [/variables]
#enddef
#define	SCALAR _S_ID _S_VAL
    {_S_ID}={_S_VAL}
#enddef
#define BEGIN_ARRAY_CHILD _A_ID _A_IX
    [{_A_ID}]
#enddef
#define END_ARRAY_CHILD _A_ID _A_IX
    [/{_A_ID}]
#enddef
#define BEGIN_CONTAINER _C_ID
    [{_C_ID}]
#enddef
#define END_CONTAINER _C_ID
    [/{_C_ID}]
#enddef
# wmlindent: stop ignoring

#define __ENDLEVEL_SHARED
    # Redraw display area
    {REDRAW}
    # Store hero's side colour, TC map and standing frame file path
    # Used in IftU's StoryWML
    [if]
        [have_unit]
            description=Galas
        [/have_unit]
        [then]
            {CLEAR_VARIABLE storymap_heroicon}
            [store_unit]
                [filter]
                    description=Galas
                [/filter]
                variable=__heroprobe
                kill=no
            [/store_unit]
            [store_side]
                side=$__heroprobe.side
                variable=__herosideprobe
            [/store_side]
            {VARIABLE storymap_heroicon ("$__heroprobe.image|~RC($__heroprobe.flag_rgb|>$__herosideprobe.colour|)")}
            {CLEAR_VARIABLE __heroprobe}
            {CLEAR_VARIABLE __herosideprobe}
        [/then]
    [/if]
#enddef

#define OVERRIDE_NEXT_SCENARIO _ID
    [+endlevel]
        next_scenario={_ID}
    [/endlevel]
#enddef

#define OVERRIDE_CARRYOVER_PERCENTAGE _VALUE
    [+endlevel]
        carryover_percentage={_VALUE}
    [/endlevel]
#enddef

#define ENDLEVEL_VICTORY _BONUS
    {__ENDLEVEL_SHARED}
    {VICTORY_MUSIC}
    [endlevel]
        result=victory
        bonus={_BONUS}
    [/endlevel]
#enddef

#define ENDLEVEL_CONTINUE
    {__ENDLEVEL_SHARED}
    [music]
        name=silence.ogg
        immediate=yes
        play_once=yes
    [/music]
    [endlevel]
        result=continue
        bonus=no
    [/endlevel]
#enddef

#define ENDLEVEL_QUIET
    {__ENDLEVEL_SHARED}
    [endlevel]
        result=continue_no_save
        bonus=no
    [/endlevel]
#enddef

#define ENDLEVEL_DEFEAT
    {__ENDLEVEL_SHARED}
    {DEFEAT_MUSIC}
    [endlevel]
        result=defeat
    [/endlevel]
#enddef

#define CAPTURE_VILLAGE _SIDE _X _Y
    [capture_village]
        side={_SIDE}
        x={_X}
        y={_Y}
    [/capture_village]
#enddef

# This macro was originally a complex WML-emulated formula of more than 100 lines. Thanks zookeeper and
# Sapient for telling me of this [filter_adjacent_location] trick that reduces it to 8 lines. :)
#define GET_ADJACENT_HEX _ORIGIN_X _ORIGIN_Y _DIRECTION _RESULT_STORE
    [store_locations]
        [filter_adjacent_location]
            adjacent=-{_DIRECTION}
            x={_ORIGIN_X}
            y={_ORIGIN_Y}
        [/filter_adjacent_location]
        variable={_RESULT_STORE}
    [/store_locations]
#enddef

#define RETRIEVE_GOLD _AMOUNT
    [sound]
        name=gold.ogg
    [/sound]
    # It's mandatory to use a variable instead of a macro, as the latter causes the resultant text
    # not to be matched in the gettext source.
    {VARIABLE temp_gold_retrieval_amount ({_AMOUNT})}
    [message]
        speaker=narrator
        image="items/gold-coins-medium.png"
        message= _ "You retrieve $temp_gold_retrieval_amount pieces of gold."
    [/message]
    [gold]
        side=1
        amount=$temp_gold_retrieval_amount
    [/gold]
    {CLEAR_VARIABLE temp_gold_retrieval_amount}
#enddef

#define RECEIVE_GOLD _AMOUNT
    [sound]
        name=gold.ogg
    [/sound]
    # It's mandatory to use a variable instead of a macro, as the latter causes the resultant text
    # not to be matched in the gettext source.
    {VARIABLE temp_gold_retrieval_amount ({_AMOUNT})}
    [message]
        speaker=narrator
        image="items/gold-coins-medium.png"
        message= _ "You receive $temp_gold_retrieval_amount pieces of gold!"
    [/message]
    [gold]
        side=1
        amount=$temp_gold_retrieval_amount
    [/gold]
    {CLEAR_VARIABLE temp_gold_retrieval_amount}
#enddef

#define ADD_GOLD _SIDE _ONEASY _ONMEDIUM _ONHARD
    [gold]
        side={_SIDE}
        {QUANTITY amount {_ONEASY} {_ONMEDIUM} {_ONHARD} }
    [/gold]
#enddef

#define SET_GOLD _SIDE _ONEASY _ONMEDIUM _ONHARD
    [modify_side]
        side={_SIDE}
        {QUANTITY gold {_ONEASY} {_ONMEDIUM} {_ONHARD} }
    [/modify_side]
#enddef

#define SCROLL_TO_UNIT _DESC
    [scroll_to_unit]
        description={_DESC}
    [/scroll_to_unit]
#enddef

#define SET_RECRUIT_LIST _SIDE _LIST
    [modify_side]
        side={_SIDE}
        recruit={_LIST}
    [/modify_side]
#enddef

#define REMOVE_RECRUIT_LIST _SIDE
    [modify_side]
        side={_SIDE}
        recruit=" "
    [/modify_side]
#enddef

# Note: using [modify_side] to edit various side stats at once is recommended
# now that it's available (v1.3.11)
#define ALLOW_RECRUIT _SIDE _LIST
    [allow_recruit]
        side={_SIDE}
        type={_LIST}
    [/allow_recruit]
#enddef

#define DISALLOW_RECRUIT _SIDE _LIST
    [disallow_recruit]
        side={_SIDE}
        type={_LIST}
    [/disallow_recruit]
#enddef

#define HEADER_NEW_OBJECTIVES
    summary= _ "New objectives:"
#enddef
#define HEADER_CURRENT_OBJECTIVES
    summary= _ "Current objectives:"
#enddef
#define HEADER_INITIAL_OBJECTIVES
    summary= _ "Initial objectives:"
#enddef

#define OBJECTIVE_NOTES _NOTES_TEXT
    note="*"+_"Scenario notes:"+"
"+{_NOTES_TEXT}
#enddef

#define OBJECTIVE_TO_WIN _DESCRIPTION
    [objective]
        description={_DESCRIPTION}
        condition=win
    [/objective]
#enddef

#define OBJECTIVE_TO_BONUS _DESCRIPTION
    [objective]
        description="{UI_COLOR_BONUS}"+{_DESCRIPTION}
        condition=win
    [/objective]
#enddef

#define OBJECTIVE_TO_LOSE _DESCRIPTION
    [objective]
        description={_DESCRIPTION}
        condition=lose
    [/objective]
#enddef

#define SET_OBJECTIVES _SIDE _CONTENTS
    [objectives]
        side={_SIDE}
        {_CONTENTS}
    [/objectives]
#enddef

#define UNDER_CONSTRUCTION
    [event]
        name=start
        [message]
            speaker=narrator
            caption= _ "Hard Hat Area"
            message="*"+_"Shadow Master (author):
This scenario is still under construction. If you want to advance further in this campaign, rather than do debugging or testing here, it's recommended that you go back to the earlier scenario and select the normal, complete branch. Comments to the www.wesnoth.org forum thread 'Invasion from the Unknown' (Scenario and Campaign dev. forum)

-- The author"
            image=wesnoth-icon.png
        [/message]
    [/event]
#enddef

#define SIGHTED_SUF_BY_PLAYER _SPOTTED_UNIT_SUF
    name=sighted
    [filter]
        {_SPOTTED_UNIT_SUF}
    [/filter]
    [filter_second]
        side=1
    [/filter_second]
    {REDRAW}
#enddef

#define SIGHTED_SUF_BY_SIDE _SPOTTED_UNIT_SUF _SPOTTER_SIDE_NUM
    name=sighted
    [filter]
        {_SPOTTED_UNIT_SUF}
    [/filter]
    [filter_second]
        side={_SPOTTER_SIDE_NUM}
    [/filter_second]
    {REDRAW}
#enddef

#define SCENARIO_SETUP
#enddef

#define CHARACTER_1ST_TIME_HELP _CID _HELPMSG
    [event]
        name=select
        [filter]
            description={_CID}
        [/filter]
        [if]
            {VARIABLE_BOOLEAN_EQUALS character_1st_time_help yes}
            [then]
                [message]
                    speaker=narrator
                    caption= _ "UI^Character description"
                    image="$unit.image|~TC($unit.side|,$unit.flag_rgb|)"
                    message={_HELPMSG}
                [/message]
            [/then]
        [/if]
    [/event]
#enddef

#define PLAYER_RECRUITMENT_SETUP_FOR_SCENARIO _SID
    {VARIABLE temp_sid {_SID} }
    [if]
        {VARIABLE_NUM_EQUALS temp_sid 4}
        [then]
            {DISALLOW_RECRUIT 1 "Elvish Scout"}
            {ALLOW_RECRUIT 1 "Elvish Scout scenario4"}
        [/then]
        [else]
            [if]
                {VARIABLE_NUM_LESS_THAN temp_sid 19}
                {VARIABLE_NUM_GREATER_THAN temp_sid 4}
                [then]
                    {DISALLOW_RECRUIT 1 "Elvish Civilian,Elvish Hunter,Elvish Archer,Elvish Shaman,Elvish Scout,Elvish Fighter,Elvish Scout scenario4"}
                    {VARIABLE temp_prs_norecruit_list ""}
                    {VARIABLE temp_prs_clone_suffix "scenario$temp_sid"}
                    {FOR i 5 (less_than_equal_to=18) 1 (
                    [if]
                        {VARIABLE_NUM_EQUALS i 5}
                        [else]
                            {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|,"}
                        [/else]
                    [/if]
                    {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Hunter scenario$i|,"}
                    {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Archer scenario$i|,"}
                    {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Civilian scenario$i|,"}
                    {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Shaman scenario$i|,"}
                    {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Scout scenario$i|,"}
                    {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Fighter scenario$i"}
                    )}
                    {DISALLOW_RECRUIT 1 "$temp_prs_norecruit_list"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Hunter $temp_prs_clone_suffix|,"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Archer $temp_prs_clone_suffix|,"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Civilian $temp_prs_clone_suffix|,"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Shaman $temp_prs_clone_suffix|,"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Scout $temp_prs_clone_suffix|,"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Fighter $temp_prs_clone_suffix"}
                    {ALLOW_RECRUIT 1 "$temp_prs_recruit_list"}

                    {CLEAR_VARIABLE temp_prs_norecruit_list}
                    {CLEAR_VARIABLE temp_prs_recruit_list}
                    {CLEAR_VARIABLE temp_prs_clone_suffix}
                [/then]
            [/if]
        [/else]
    [/if]
    {CLEAR_VARIABLE temp_sid}
#enddef

#define PER_VILLAGE_INCOME _INCOME
    village_gold={_INCOME}
#enddef

#define DOOR_TILES_TO_UNITS _SIDE
    # Generate door locations from the map; hardcoding would be faster at runtime,
    # but this method makes it easier and faster for me to write the WML :-)
    [store_locations]
        terrain=Xg^Z* # wmllint: ignore
        variable=door_tilemap_store
    [/store_locations]
    {FOREACH door_tilemap_store k}
    [unit]
        side={_SIDE}
        [modifications]
            {TRAIT_MECHANICAL}
        [/modifications]
        type=Door
        x=$door_tilemap_store[$k].x
        y=$door_tilemap_store[$k].y
        description=door_at_x$door_tilemap_store[$k].x|_y$door_tilemap_store[$k].y|
    [/unit]
    {NEXT k}
    {CLEAR_VARIABLE door_tilemap_store}
#enddef
