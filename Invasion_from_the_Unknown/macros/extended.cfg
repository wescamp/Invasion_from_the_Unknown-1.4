#textdomain wesnoth-Invasion_from_the_Unknown

# Mainline overrides

#define EX_CAPTURE_VILLAGES SIDE RADIUS
    [store_starting_location]
        side={SIDE}
        variable=temp_starting_location
    [/store_starting_location]

    [store_locations]
        terrain=*^V* # wmllint: ignore
        [and]
            x,y=$temp_starting_location.x,$temp_starting_location.y
            radius={RADIUS}
        [/and]
        variable=temp_starting_villages
    [/store_locations]

    {FOREACH temp_starting_villages i}
    [capture_village]
        side={SIDE}
        x,y=$temp_starting_villages[$i].x,$temp_starting_villages[$i].y
    [/capture_village]
    {NEXT i}

    {CLEAR_VARIABLE temp_starting_villages}
    {CLEAR_VARIABLE temp_starting_location}
#enddef

#define EX_SCATTER_IMAGE FILTER NUMBER IMAGELIST
    # Place NUMBER copies of a random image from IMAGELIST on map hexes matching FILTER.
    # Does not check for collisions.
    #
    # This call will scatter 20 pine-tree graphics over grassland:
    #! {SCATTER_IMAGE (terrain=Gg) 20 scenery/pine1.png,scenery/pine2.png}
    [store_locations]
        {FILTER}
        variable=random_placement_locations
    [/store_locations]

    {VARIABLE_OP random_string format "0..$random_placement_locations.length"}

    {VARIABLE REPEAT_i 0}

    [while]
        [variable]
            name=REPEAT_i
            less_than={NUMBER}
        [/variable]

        [do]
            {RANDOM $random_string}

            {VARIABLE_OP random_placement_x format "$random_placement_locations[$random].x"}
            {VARIABLE_OP random_placement_y format "$random_placement_locations[$random].y"}

            {RANDOM {IMAGELIST} }

            [item]
                image=$random
                x,y=$random_placement_x,$random_placement_y
            [/item]

            {VARIABLE_OP REPEAT_i add 1}
        [/do]
    [/while]

    {CLEAR_VARIABLE REPEAT_i}
    {CLEAR_VARIABLE random_placement_locations}
    {CLEAR_VARIABLE random_string}
#enddef

# Lately I have had too much trouble as the result of changes to the mainline macros' parameter
# order; therefore, here I have written overrides tailored to existing WML of this campaign; changing
# the parameter order across 23 scenarios which make heavy use of macros is very difficult...

#define EX_LOYAL_UNIT _UNIT_TYPE _DESC _UDESC _SIDE_NUM _XPOS _YPOS
    [unit]
        type={_UNIT_TYPE}
        side={_SIDE_NUM}

        x,y={_XPOS},{_YPOS}

        description={_DESC}
        user_description={_UDESC}

        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    [/unit]
#enddef

#define EX_LOYAL_UNDEAD_UNIT _UNIT_TYPE _SIDE_NUM _XPOS _YPOS
    [unit]
        type={_UNIT_TYPE}
        side={_SIDE_NUM}

        x,y={_XPOS},{_YPOS}

        [modifications]
            {TRAIT_LOYAL}
            {TRAIT_UNDEAD}
        [/modifications]
    [/unit]
#enddef

# Remove shroud by standard location filter
# Got the idea from Sapient
#define EX_REMOVE_SHROUD _SLF
    [store_locations]
        {_SLF}
        variable=temp_ex_remove_shroud_locs
    [/store_locations]

    {FOREACH temp_ex_remove_shroud_locs i}
        [remove_shroud]
            x=$temp_ex_remove_shroud_locs[$i].x
            y=$temp_ex_remove_shroud_locs[$i].y
        [/remove_shroud]
    {NEXT i}

    {CLEAR_VARIABLE temp_ex_remove_shroud_locs}
#enddef
