#textdomain wesnoth-Invasion_from_the_Unknown

# This campaign uses a load of macros that serve as syntactic shorcuts throughout the code,
# or perform common operations that would otherwise require lots of time to be written.

# Please don't move or remove this file or its contents without prior checking on the
# campaign's WML file.

# ********************** ESSENTIAL MACROS **********************

# wmlindent: start ignoring

# The void string
#define NULL
""#enddef

# Internal null id used by certain WML handlers such as [scenario] next_scenario= [/scenario]
#define __NULL_ID
null#enddef

# wmlindent: stop ignoring

# Macro which allows to add dummy translator notes, for instance, so that they do get to appear
# in wmlxgettext's output but are ignored by the game.
#define DUMMY _FOOBAR
#enddef

#define EX_ATTRIBUTE _LVALUE _RVALUE
    {_LVALUE}={_RVALUE}
#enddef

#define TRUE
    [have_location]
        x=1
        y=1
    [/have_location]
#enddef

#define FALSE
    [not]
        {TRUE}
    [/not]
#enddef

# ********************** CODE STRUCTURE MACROS **********************

# For code that ought to be executed in a guaranteed order.
# This is the first WML clause which contents will be processed in a game event.
#define COMMAND _IN
    [command]
        {_IN}
    [/command]
#enddef

# Logical OR
#define OR _IN
    [or]
        {_IN}
    [/or]
#enddef

# Logical AND
#define AND _IN
    [and]
        {_IN}
    [/and]
#enddef

# Logical NOT
#define NOT _IN
    [not]
        {_IN}
    [/not]
#enddef

#define DO _CODE
    {_CODE}
    [while]
        [do]
            {_CODE}
        [/do]
    [/while]
#enddef

#define WHILE _COND
    [+while]
        {_COND}
    [/while]
#enddef

#define FOR _ITOR _ITOR_INIT_VAL _ITOR_COND _ITOR_INC_STEP _CODE
    {VARIABLE {_ITOR} {_ITOR_INIT_VAL} }
    [while]
        [variable]
            name={_ITOR}
            {_ITOR_COND}
        [/variable]
        [do]
            {_CODE}
            [set_variable]
                name={_ITOR}
                add={_ITOR_INC_STEP}
            [/set_variable]
        [/do]
    [/while]
    {CLEAR_VARIABLE {_ITOR} }
#enddef

# Loosely C-style switch clause macros
#define SWITCH _VAR_NAME
    [set_variable]
        name=__temp_SWITCH
        value={_VAR_NAME}
    [/set_variable]
#enddef

# For CASE_LEXICAL and CASE_NUMERICAL we are toast if the WML preprocessor doesn't do
# automatic variable expansion at [if][variable] level on name= key.
# wmllint: unbalanced-on
# wmlindent: start ignoring
#define CASE_LEXICAL _VALUE
    [if]
        [variable]
            name=$__temp_SWITCH
            equals={_VALUE}
        [/variable]
        [then]
#enddef

#define CASE_NUMERICAL _VALUE
    [if]
        [variable]
            name=$__temp_SWITCH
            numerical_equals={_VALUE}
        [/variable]
        [then]
#enddef

#define END_CASE
        [/then]
    [/if]
#enddef
# wmlindent: stop ignoring
# wmllint: unbalanced-off

#define CASE _VALUE
    {CASE_LEXICAL {_VALUE} }
#enddef

#define END_SWITCH
    [clear_variable]
        name=__temp_SWITCH
    [/clear_variable]
#enddef

# ********************** USER INTERFACE MACROS **********************

#define DELAY _TIMEOUT
    [delay]
        time={_TIMEOUT}
    [/delay]
#enddef

#define REDRAW
    [redraw]
    [/redraw]
#enddef

#define MSG_SUF _SUF _TEXT
    [message]
        {_SUF}
        message={_TEXT} # wmllint: ignore
    [/message]
#enddef

#define MSG_SPEAKER _SPEAKER _TEXT
    {MSG_SUF (speaker={_SPEAKER}) ({_TEXT})}
#enddef

#define MSG_UNIT _DESC _TEXT
    {MSG_SUF (description={_DESC}) ({_TEXT})}
#enddef

#define MSG_NARRATOR _TEXT
    [message]
        speaker=narrator
        image="wesnoth-icon.png"
        message={_TEXT} # wmllint: ignore
    [/message]
#enddef

#define MSG_INNER _TEXT
    [message]
        speaker=narrator
        image=misc/blank-hex.png
        message={_TEXT} # wmllint: ignore
    [/message]
#enddef

#define CUSTOM_MSG _IMAGE _TEXT
    [message]
        speaker=narrator
        image={_IMAGE}
        message={_TEXT} # wmllint: ignore
    [/message]
#enddef

# wmlindent: start ignoring
#define UI_COLOR_BONUS
<100,100,255>#enddef

#define UI_COLOR_GRAYED
<128,128,128>#enddef

#define UI_COLOR_FOOTNOTE
{UI_COLOR_GRAYED}#enddef
# wmlindent: stop ignoring

# ********************** INTERNAL STATE CONTROL MACROS **********************

# Stores IftU's internal version values, to use with patching stub blocks for
# scenario compatibility with prior versions, for instance.
#define STORE_CAMPAIGN_VERSION _VARIABLE_NAME
    [set_variable]
        name={_VARIABLE_NAME}.major
        value={VERSION_INVASION_FROM_THE_UNKNOWN_MAJOR}
    [/set_variable]
    [set_variable]
        name={_VARIABLE_NAME}.minor
        value={VERSION_INVASION_FROM_THE_UNKNOWN_MINOR}
    [/set_variable]
    [set_variable]
        name={_VARIABLE_NAME}.revision
        value={VERSION_INVASION_FROM_THE_UNKNOWN_REVISION}
    [/set_variable]
    [set_variable]
        name={_VARIABLE_NAME}.literal_string
        value="{VERSION_INVASION_FROM_THE_UNKNOWN_MAJOR}.{VERSION_INVASION_FROM_THE_UNKNOWN_MINOR}.{VERSION_INVASION_FROM_THE_UNKNOWN_REVISION}"
    [/set_variable]
#enddef

# Standard code used to initialize any scenario
# This macro should be defined to NULL when the campaign is merged into mainline
#define COMMON_SCENARIO_SETUP
    [event]
        name=prestart
        {STORE_CAMPAIGN_VERSION stdmacros.campaign_version}
    [/event]
#enddef
