#textdomain wesnoth-Invasion_from_the_Unknown

[scenario]
	id=19_Infested_Pass
	name= _ "Infested Pass"
	{MAP 19_Infested_Pass.map}
	{TURNS 34 32 30}
	next_scenario=20_Wesmere
	victory_when_enemies_defeated=no

	{SCENARIO_MUSIC "underground.ogg"}

	{SHORTDARK}
	{DAWN2}
	{MORNING2}
	{MIDDAY2}
	{AFTERNOON2}
	{DUSK2}
	{LONGDARK1}
	{LONGDARK2}
	{LONGDARK3}
	{LONGDARK4}
	{DAWN1}
	{MORNING1}
	{MIDDAY1}
	{AFTERNOON1}
	{DUSK1}

	{STORYTXT_INFESTED_PASS}
	{STORYMAP_INFESTED_PASS}

	{DEATHS_COMMON}

	# Include custom RC tables
	{CUSTOM_COLOR_RANGES}
	
	[side]
		type=Elvish Hero
		description=Galas
		user_description= _ "Galas"
		unrenamable=yes
		side=1
		canrecruit=1
		controller=human
		team_name=good
		fog=yes
		shroud=yes
	[/side]

	[side]
		no_leader=yes
		side=2
		[ai]
			#makes them focus on the player
			[target]
				side=1
				value=10
			[/target]
			aggression=1.0
			leader_value=5.0
			grouping=no
			caution=0.0
			simple_targetting=yes
		[/ai]
		{CHAOS_FLAG}
		team_name=evil
	[/side]

	[side]
		colour={COLOR_YELLOW}
		no_leader=yes
		side=3
		[ai]
			simple_targetting=yes
			aggression=1.0
			caution=0.0
			grouping=defensive
		[/ai]
		team_name=wild
		{GENERIC_GUARDIAN_AUTOSIDE (Crow) 16 17}
		{GENERIC_GUARDIAN_AUTOSIDE (Crow) 6 21}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Crow) 11 29}
		{GENERIC_GUARDIAN_AUTOSIDE (Crow) 13 39}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Crow) 4 10}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Crow) 14 9}

		{GENERIC_GUARDIAN_AUTOSIDE (Tiger) 12 10}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Tiger) 9 15}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Tiger) 14 23}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Tiger) 9 31}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Tiger) 15 36}

		{GENERIC_GUARDIAN_AUTOSIDE (Wolf) 5 37}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Wolf) 10 40}
		{GENERIC_GUARDIAN_AUTOSIDE (Wolf) 17 28}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Wolf) 5 32}
		{GENERIC_GUARDIAN_AUTOSIDE (Wolf) 9 21}
		{GENERIC_GUARDIAN_AUTOSIDE (Wolf) 11 22}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Wolf) 16 13}
		{MAKE_FACING_REVERSE}
		{GENERIC_GUARDIAN_AUTOSIDE (Wolf) 7 12}
		{GENERIC_GUARDIAN_AUTOSIDE (Wolf) 10 8}
		{MAKE_FACING_REVERSE}
	[/side]

	# Set NPC behaviour for side 3
	{NPC_BIRD_BEHAVIOR 3 1 20 1 40}

	[event]
		name=prestart
		# Recall heroes
		{RECALL Elynia}
		{RECALL (Mal Keshar)}
		{RECALL Erathan}
		{RECALL Igor}

		# Note: the code for the ambushers is mostly identical to that of
		# Crossroads in HttT.

		# Here we set up an array that holds the possible ambusher unit types.
		# We do this instead of just using a random type when creating the
		# ambusher so that the even distribution of different types is
		# guaranteed.

		{VARIABLE random_ambusher_type_table[0].type "Chaos Marauder"}
		{VARIABLE random_ambusher_type_table[1].type "Imp"}
		{VARIABLE random_ambusher_type_table[2].type "Demon Zephyr"}
		{VARIABLE random_ambusher_type_table[3].type "Demon Grunt"}
		{VARIABLE random_ambusher_type_table[4].type "Blood Imp"}

		#ifdef NORMAL
			{VARIABLE random_ambusher_type_table[5].type "Shaxthal Rayblade"}
		#endif

		#ifdef HARD
			{VARIABLE random_ambusher_type_table[5].type "Demon Warrior"}
			{VARIABLE random_ambusher_type_table[6].type "Gutwrencher Imp"}
			{VARIABLE random_ambusher_type_table[7].type "Psy Mindraider"}
		#endif

		{VARIABLE random_ambusher_type_i 0}

# With this macro we place a set number of ambushers (from the above list) to a
# given rectangular area. We do this in blocks so that we can guarantee that
# every major area has at least some ambushers: if we randomized the ambush
# locations across all possible locations at once, the RNG could theoretically
# clump all the ambushers into a single corner of the map.

#define PASS_AMBUSH_TERRAIN_FILTER
M*,H* #enddef

#define PASS_AMBUSH_AREA SIDE X Y NUMBER
	[store_locations]
		x,y={X},{Y}
		terrain={PASS_AMBUSH_TERRAIN_FILTER}
		[filter_adjacent_location]
			[not]
				terrain={PASS_AMBUSH_TERRAIN_FILTER}
			[/not]
			[not]
				[filter]
				[/filter]
			[/not]
		[/filter_adjacent_location]
		variable=possible_ambush_locations
	[/store_locations]

	{VARIABLE ambusher 0}

	[while]
		{VARIABLE_NUM_LESS_THAN (ambusher) ({NUMBER})}
		[do]
			{RANDOM 0..$possible_ambush_locations.length}
			# Check if the random location picked already contains an ambusher
			# and if it does, we loop again to pick another one until an empty
			# one is found.
			[if]
				[have_unit]
					x,y=$possible_ambush_locations[$random].x,$possible_ambush_locations[$random].y
				[/have_unit]
				[else]
					# random_ambusher_type_i is just a counter variable with
					# which we point to a given element of the
					# random_ambusher_type_table array. Here we make it loop
					# over the array continuously.
					[if]
						[variable]
							name=random_ambusher_type_i
							less_than=4
						[/variable]
						[then]
							{VARIABLE_INC random_ambusher_type_i}
						[/then]
						[else]
							{VARIABLE random_ambusher_type_i 0}
						[/else]
					[/if]
					# And here we place an ambusher of a type specified by the
					# random_ambusher_type_table and random_ambusher_type_i
					# variables, thus always having the same ratio of different
					# types.
					[unit]
						x,y=$possible_ambush_locations[$random].x,$possible_ambush_locations[$random].y
						type=$random_ambusher_type_table[$random_ambusher_type_i].type
						side={SIDE}
						role=ambusher
						random_traits=yes
						upkeep=loyal
						[status]
							hides=yes
						[/status]
					[/unit]
					[object]
						silent=yes
						[filter]
							x,y=$possible_ambush_locations[$random].x,$possible_ambush_locations[$random].y
						[/filter]
						[effect]
							apply_to=new_ability
							[abilities]
								[hides]
									id=pass_ambush
									affect_self=yes
									[filter_self]
										role=ambusher
										[filter_location]
											terrain={PASS_AMBUSH_TERRAIN_FILTER}
										[/filter_location]
									[/filter_self]
								[/hides]
							[/abilities]
						[/effect]
					[/object]
					{VARIABLE_OP ambusher add 1}
				[/else]
			[/if]
		[/do]
	[/while]
#enddef
#ifdef EASY
		{PASS_AMBUSH_AREA 2 1-5 5-25 25}
		{PASS_AMBUSH_AREA 2 14-20 11-30 15}
		{PASS_AMBUSH_AREA 2 1-20 31-40 10}
#endif
#ifdef NORMAL
		{PASS_AMBUSH_AREA 2 1-5 5-25 27}
		{PASS_AMBUSH_AREA 2 14-20 11-30 19}
		{PASS_AMBUSH_AREA 2 1-20 31-40 13}
#endif
#ifdef HARD
		{PASS_AMBUSH_AREA 2 1-5 5-25 29}
		{PASS_AMBUSH_AREA 2 14-20 11-30 21}
		{PASS_AMBUSH_AREA 2 1-20 31-40 16}
#endif

		{CLEAR_VARIABLE possible_ambush_locations}
		{CLEAR_VARIABLE random_ambusher_type_table}
		{CLEAR_VARIABLE random_ambusher_type_i}
		{CLEAR_VARIABLE ambusher}

		[objectives]
			side=1
			{OBJECTIVE_TO_WIN ( _ "Galas, Mal Keshar or Elynia must reach the end of the mountain pass")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Galas")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Elynia")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Mal Keshar")}
			{OBJECTIVE_TO_LOSE ( _ "Death of Erathan")}
			{OBJECTIVE_TO_LOSE ( _ "Turns run out")}
		[/objectives]
	[/event]

	[event]
		name=start
		{MSG_UNIT Elynia ( _ "Could you explain us the plan again, but in a more detailed manner, Galas?")}
		{MSG_UNIT Galas ( _ "The general idea is to sneak past the border defenses of the Empire, make it to the ruler's lair and slay him or her. Of course this will be highly risky, and I warn you about our imminent death; therefore, you are free to leave now, but I don't think you could leave later.")}
		{MSG_UNIT Erathan ( _ "And I repeat that I decided to come with you with a purpose. I won't go back now at this point.")}
		{MSG_UNIT Igor ( _ "Neither will I.")}
		{MSG_UNIT (Mal Keshar) ( _ "Elf, do you have any idea of how we will get there? We don't even know where the heart of the Empire is located.")}
		{MSG_UNIT Galas ( _ "It won't be difficult to find out if we act carefully. War has started, and I expect the Chaos master to lead all his troops to concentrate in the attack front in the North. We will see them marching on that direction, and will figure out the opposite one, where they will be coming from.")}
		{MSG_UNIT (Mal Keshar) ( _ "Sounds like a good plan.")}
		{MSG_UNIT Elynia ( _ "I think I still remember correctly most locations and geography of this continent. If we go through this mountain pass we will arrive to the place where the Wesmere forest used to be. Although it's by now a damned zone, it's better than going through the deserts, where we surely would perish and be found by the patrols. In Wesmere we can find a short cut that goes underground, possibly leading us to the heart of the empire.")}
		{MSG_UNIT Galas ( _ "How do you know that?")}
		{MSG_UNIT Elynia ( _ "If my suspicions are true, the empire would have grown and expanded from the place where the old kingdom's capital used to be, or at least in its vicinity. It's the first place we should look for.")}
		{MSG_UNIT Galas ( _ "Well, then so be it. We'll go through Wesmere forest. I hope you know what you are doing.")}
		{MSG_UNIT Elynia ( _ "I hope that too.")}
	[/event]

	[event]
		{SIGHTED_SUF_BY_PLAYER (side=2)}
		{MSG_UNIT (Galas) ( _ "Look out! The fiends were hiding in that place!")}
		{MSG_UNIT (Mal Keshar) ( _ "They guard even these mountains.")}
		{MSG_UNIT (Elynia) ( _ "Yes, but these are nothing but wanderers. They can be easily taken care of by us.")}
	[/event]

	[event]
		name=moveto
		first_time_only=no
		[filter]
			side=1
			x,y=1-20,44
		[/filter]
		{ALLOW_UNDO}

		[if]
			{VARIABLE_LEXICAL_EQUALS unit.description "Mal Keshar"}
			{OR {VARIABLE_LEXICAL_EQUALS unit.description "Galas"} }
			{OR {VARIABLE_LEXICAL_EQUALS unit.description "Elynia"} }
			[then]
				{ENDLEVEL_VICTORY yes}
			[/then]
		[/if]
	[/event]

	[event]
		name=victory
		{MSG_NARRATOR ( _ "And so, the group entered the Unknown... the Chaos Empire's territory.")}
		{MSG_INNER ( _ "The process has begun, elf, and your pitiful attempt at slaying me will not do anything but speed it up.")}
	[/event]

	[event]
		name=ai turn
		first_time_only=no

		[if]
			[variable]
				name=side_number
				equals=2
			[/variable]

			[then]
				{MODIFY_UNIT side,role=2,ambusher moves 0}
			[/then]
		[/if]
	[/event]

	[event]
		name=moveto
		first_time_only=no

		[filter]
			side=1

			[filter_adjacent]
				side=2
				role=ambusher
			[/filter_adjacent]
		[/filter]

		{MODIFY_UNIT (
			side=2
			role=ambusher
			[filter_adjacent]
				x,y=$x1,$y1
			[/filter_adjacent]
		) role not_ambusher}

		[redraw][/redraw]
	[/event]
[/scenario]
