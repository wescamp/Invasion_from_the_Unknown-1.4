#textdomain wesnoth-Invasion_from_the_Unknown
# No dehydration logic in Easy challenge setting
#ifndef EASY

# wmlindent: start ignoring
#define TXT_DEHYDRA
    _"dehydrated"
#enddef
#define TXT_DEHYDRA_FEMALE
    _"female^dehydrated"
#enddef
#define TXT_HYDRA
    _"hydrated"
#enddef
#define TXT_HYDRA_FEMALE
    _"female^hydrated"
#enddef

#define HYDRA_TILES
W*,S*,Dd^Do#enddef

#define NEUTRAL_TILES
Gg^F*,Gs^F*,G*,U*,C*,K*,Dd^Vda,Dd^Vdt,Hh^Vhh,Mm^Vhh#enddef
# wmlindent: stop ignoring

#define DEHYDRA_PROLOG
    [event]
        name=prestart
        # Damage applied per turn over player units / hydration heal amount is the same, but doubled
        {VARIABLE dehydra.turn_damage {DIFF 0 2 4} }
        {VARIABLE dehydra.turn_heal {DIFF 0 4 8} }
        # Minimum HP left for dehydrated units; they cannot die
        # of sheer dehydration
        {VARIABLE dehydra.minimum_HP 1}
    [/event]

    [event]
        name=start
        [message]
            speaker=narrator
            caption= _ "Dehydration"
            message= _ "Units which are located on most terrain types during the beginning of their side's turn will receive $dehydra.turn_damage points of damage; an adjacent healer of the same allegiance may prevent the damage caused by dehydration, however.
 
On the other hand, units which are located on water or oasis tiles will be hydrated, and their hitpoints are afterwards increased by $dehydra.turn_heal or the greatest amount that can be provided by an adjacent friendly healer, whichever is the greatest.
 
Units on grass, savanna, villages, keeps or castles are neither hydrated or dehydrated. Units cannot die or drop below $dehydra.minimum_HP merely by dehydration."
            image=wesnoth-icon.png
        [/message]
    [/event]
#enddef

#define DEHYDRA_EPILOG
    [event]
        name=victory
        {CLEAR_VARIABLE dehydra}
    [/event]
#enddef

#define DEHYDRA_DEHYDRA
    [event]
        name=turn refresh
        first_time_only=no
        [store_unit]
            [filter]
                side=$side_number
                [filter_location]
                    time_of_day=lawful
                    [not]
                        terrain="{HYDRA_TILES},{NEUTRAL_TILES}" # wmllint: ignore
                    [/not]
                    {IS_ON_MAP}
                [/filter_location]
                [not]
                    type=Giant Scorpion
                [/not]
                [not]
                    type=Mudcrawler
                [/not]
                [not]
                    type=Giant Mudcrawler
                [/not]
                [not]
                    type=Mother Mudcrawler
                [/not]
                [not]
                    race=undead
                [/not]
                [not]
                    race=elvish_spirits
                [/not]
                [not]
                    race=bats
                [/not]
                [not]
                    [wml_filter]
                        ai_special=guardian
                    [/wml_filter]
                [/not]
                [not]
                    [wml_filter]
                        [status]
                            not_living=yes
                        [/status]
                    [/wml_filter]
                [/not]
                # Don't affect poisoned units unless playing
                # on HARD difficulty
#ifndef HARD
                [not]
                    [wml_filter]
                        [status]
                            poisoned=on
                        [/status]
                    [/wml_filter]
                [/not]
#endif
            [/filter]
            kill=no
            variable=dehydra.units_store
        [/store_unit]
        {FOREACH dehydra.units_store i}
            [if]
                {VARIABLE_NUMERICAL_GREATER_THAN dehydra.units_store[$i].hitpoints $dehydra.minimum_HP}
                [then]
                    {VARIABLE_MIN dehydra.units_store[$i].hitpoints $dehydra.turn_damage}
                    [if]
                        {VARIABLE_NUMERICAL_LESS_THAN dehydra.units_store[$i].hitpoints $dehydra.minimum_HP}
                        [then]
                            {VARIABLE dehydra.units_store[$i].hitpoints $dehydra.minimum_HP}
                        [/then]
                    [/if]
                    {VARIABLE dehydra.temp_uu_flabeltxt {TXT_DEHYDRA} }
                    [if]
                        {VARIABLE_LEXICAL_EQUALS dehydra.units_store[$i].gender "female"}
                        [then]
                            {VARIABLE dehydra.temp_uu_flabeltxt {TXT_DEHYDRA_FEMALE} }
                        [/then]
                    [/if]
                    # Prevent rest-healing
                    {VARIABLE dehydra.units_store[$i].resting "no"}
                    # Notify hydrator
                    {VARIABLE dehydra.units_store[$i].status.dehydra "on"}
                    [unstore_unit]
                        {COLOR_HARM}
                        variable=dehydra.units_store[$i]
                        text=$dehydra.temp_uu_flabeltxt
                        find_vacant=no
                    [/unstore_unit]
                [/then]
            [/if]
        {NEXT i}
        # Clean-up of the big unit array, so that it doesn't use too much resources
        {CLEAR_VARIABLE dehydra.units_store}
    [/event]
#enddef

#define DEHYDRA_HYDRA
    [event]
        name=turn refresh
        first_time_only=no
        [store_unit]
            [filter]
                [wml_filter]
                    [status]
                        dehydra=on
                    [/status]
                [/wml_filter]
                side=$side_number
                {IS_ON_MAP}
                [filter_location]
                    terrain="{HYDRA_TILES}" # wmllint: ignore
                [/filter_location]
            [/filter]
            variable=dehydra.units_store
            kill=no
        [/store_unit]
        {FOREACH dehydra.units_store i}
            {CLEAR_VARIABLE dehydra.units_store[$i].status.dehydra}
            {VARIABLE dehydra.temp_uu_flabeltxt {TXT_HYDRA} }
            [if]
                {VARIABLE_LEXICAL_EQUALS dehydra.units_store[$i].gender "female"}
                [then]
                    {VARIABLE dehydra.temp_uu_flabeltxt {TXT_HYDRA_FEMALE} }
                [/then]
            [/if]
            [unstore_unit]
                {COLOR_HEAL}
                variable=dehydra.units_store[$i]
                text=$dehydra.temp_uu_flabeltxt
                find_vacant=no
            [/unstore_unit]
            # Check if this unit is on an oasis tile
            [store_locations]
                x=$dehydra.units_store[$i].x
                y=$dehydra.units_store[$i].y
                variable=dehydra.tile_probe
            [/store_locations]
            # Check if this unit has adjacent healers of the same side
            [store_unit]
                [filter]
                    [filter_location]
                        x=$dehydra.units_store[$i].x
                        y=$dehydra.units_store[$i].y
                        radius=1
                    [/filter_location]
                    ability=healing
                    side=$dehydra.units_store[$i].side
                [/filter]
                variable=dehydra.adjacent_healers_probe
                kill=no
            [/store_unit]
            # Oasis and healers already heal enough; prevent stock healing, and let the
            # oasis/healers do the job instead of the water for programming purposes
            [if]
                {VARIABLE_LEXICAL_NOT_EQUALS dehydra.tile_probe "Dd^Do"}
                {VARIABLE_NUMERICAL_EQUALS dehydra.adjacent_healers_probe.length 0}
                [then]
                    [object]
                        silent=yes
                        [filter]
                            x=$dehydra.units_store[$i].x
                            y=$dehydra.units_store[$i].y
                        [/filter]
                        [effect]
                            apply_to=hitpoints
                            increase=$dehydra.turn_heal
                        [/effect]
                    [/object]
                [/then]
            [/if]
        {NEXT i}
        # Clean-up of the big unit array, so that it doesn't use too much resources
        {CLEAR_VARIABLE dehydra.units_store}
    [/event]
#enddef

#endif
# /* !EASY */

